// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model Product {
  product_id          Int       @id @default(autoincrement())
  product_name        String
  product_barcode     Int       @unique
  product_description String
  product_location    String
  unit_id             Int
  category_id         Int
  tags                String
  buying_price        Int
  selling_price       Int
  vat_inclusive       Int
  currency_id         Int
  ma_id               String
  st_id               String
  product_status      Int
  product_created_at  DateTime @default(now())
  product_updated_at  DateTime @updatedAt


  
  category            Category @relation(fields: [category_id], references: [category_id])
  currency            Currency @relation(fields: [currency_id], references: [currency_id])
  productImages       ProductImage[]
  saleProducts        SaleProduct[]
  purchaseProducts    PurchaseProduct[]
  suppliers           SupplierProduct[]

}

model Supplier {
  supplier_id         Int       @id
  supplier_name       String
  supplier_phone      String
  supplier_location   String
  supplier_email      String
  supplier_status     Int
  supplier_created_at DateTime
  supplier_updated_at DateTime

  products            SupplierProduct[]
}

model Category {
  category_id Int      @id  @default(autoincrement())
  category    String

  products    Product[]
}

model Tag {
  tag_id Int @id  @default(autoincrement())
  tag    String @unique
}

model Currency {
  currency_id         Int      @id  @default(autoincrement())
  currency_code       String
  currency_name       String
  currency_rate       Int
  updated_by          String
  currency_created_at DateTime
  currency_updated_at DateTime

  products            Product[]
  sales               Sale[]
}

model ProductImage {
  image_id   Int  @id  @default(autoincrement())
  product_id Int
  image_url  String

  product    Product @relation(fields: [product_id], references: [product_id])
}

model Sale {
  sale_id             Int      @id
  sale_ref_no         String
  se_id               Int
  sale_total_amount   Int
  sale_total_discount Int
  sale_grand_total    Int
  currency_id         Int
  sale_created_at     DateTime
  sale_updated_at     DateTime

  currency            Currency @relation(fields: [currency_id], references: [currency_id])
  saleProducts        SaleProduct[]
}

model Purchase {
  purchase_id           Int      @id  @default(autoincrement())
  purchase_quantity     Int
  purchase_unit_cost    Int
  purchase_total_cost   Int
  purchase_created_at   DateTime
  purchase_updated_at   DateTime

  purchaseProducts      PurchaseProduct[]
}

model SaleProduct {
  sale_product_id         Int      @id  @default(autoincrement())
  sale_id                 Int
  product_id              Int
  quantity                Int
  total_vat               Int
  total_discount          Int
  sale_product_created_at DateTime
  sale_product_updated_at DateTime

  product                 Product  @relation(fields: [product_id], references: [product_id])
  sale                    Sale     @relation(fields: [sale_id], references: [sale_id])
}

model PurchaseProduct {
  purchase_product__id         Int      @id
  purchase_product_quantity    Int
  purchase_product_unit_cost   Int
  purchase_product__total_cost Int
  purchase_product_created_at  DateTime
  purchase_purchase_updated_at DateTime
  product_id                   Int
  purchase_id                  Int

  product                      Product  @relation(fields: [product_id], references: [product_id])
  purchase                     Purchase @relation(fields: [purchase_id], references: [purchase_id])
}

model SupplierProduct {
  supplier_product_id Int     @id
  product_id          Int
  supplier_id         Int

  product             Product  @relation(fields: [product_id], references: [product_id])
  supplier            Supplier @relation(fields: [supplier_id], references: [supplier_id])
}


model Stock {
  stock_id     Int     @id @default(autoincrement())
  product_id   Int
  quantity     Int
  updated_at   DateTime @updatedAt

}

model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  username    String?  @unique
  password   String
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
}
